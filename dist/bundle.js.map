{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 83e08ee745b80a22a5a3","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/api/baseUrl.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_userApi","getUsers","then","result","userBody","forEach","user","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","onerror","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","set","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","keys","entries","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","getBaseUrl","getQueryStringParameterByName","window","href","regex","RegExp","results","exec"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar _userApi = __webpack_require__(2);\n\t\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var userBody = \"\";\n\t\n\t  result.forEach(function (user) {\n\t    userBody += \"<tr>\\n      <td><a href=\\\"#\\\" data-id=\\\"\" + user.id + \"\\\" class=\\\"deleteUser\\\">Delete</a></td>\\n      <td>\" + user.id + \"</td>\\n      <td>\" + user.firstName + \"</td>\\n      <td>\" + user.lastName + \"</td>\\n      <td>\" + user.email + \"</td>\\n    </tr>\";\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = userBody;\n\t\n\t  var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t  // Must use array.from to create a real array grom a DOM collection\n\t  // getElementsByClassName only return an \"array like\" object\n\t\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\t\n\t// import './index.css';\n\t\n\t// import numeral from 'numeral';\n\t\n\t// const courseValue = numeral(1000).format('$0,0.00');\n\t// //debugger; crea breakpoint y se muestra el codigo original en el navegador\n\t// console.log(`I would pay ${courseValue} for this awesome course!`); //eslint-disable-line\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(3);\n\t\n\tvar _baseUrl = __webpack_require__(4);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\tfunction del(url) {\n\t  var request = new Request(baseUrl + url, {\n\t    method: 'DELETE'\n\t  });\n\t\n\t  return fetch(request).then(onSuccess, onerror);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t  return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t  console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  /* v1\n\t  const inDevelopment = window.location.hostname === 'localhost';\n\t  return inDevelopment ? 'http://localhost:3001/' : '/';\n\t  */\n\t\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) return null;\n\t  if (!results[2]) return '';\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 83e08ee745b80a22a5a3\n **/","import {getUsers, deleteUser} from \"./api/userApi\";\r\n\r\ngetUsers().then(result => {\r\n  let userBody = \"\";\r\n\r\n  result.forEach(user => {\r\n    userBody+=`<tr>\r\n      <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\r\n      <td>${user.id}</td>\r\n      <td>${user.firstName}</td>\r\n      <td>${user.lastName}</td>\r\n      <td>${user.email}</td>\r\n    </tr>`\r\n  });\r\n\r\n  global.document.getElementById('users').innerHTML = userBody;\r\n\r\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\r\n\r\n  // Must use array.from to create a real array grom a DOM collection\r\n  // getElementsByClassName only return an \"array like\" object\r\n\r\n  Array.from(deleteLinks, link => {\r\n    link.onclick = function(event) {\r\n      const element = event.target;\r\n      event.preventDefault();\r\n      deleteUser(element.attributes[\"data-id\"].value);\r\n      const row = element.parentNode.parentNode;\r\n      row.parentNode.removeChild(row);\r\n    };\r\n  });\r\n});\r\n\r\n// import './index.css';\r\n\r\n// import numeral from 'numeral';\r\n\r\n// const courseValue = numeral(1000).format('$0,0.00');\r\n// //debugger; crea breakpoint y se muestra el codigo original en el navegador\r\n// console.log(`I would pay ${courseValue} for this awesome course!`); //eslint-disable-line\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\r\nimport getBaseUrl from './baseUrl';\r\n\r\nconst baseUrl = getBaseUrl();\r\n\r\nexport function getUsers() {\r\n  return get('users');\r\n}\r\n\r\nexport function deleteUser(id){\r\n  return del(`users/${id}`);\r\n}\r\n\r\nfunction get(url){\r\n  return fetch(baseUrl + url).then(onSuccess, onError);\r\n}\r\n\r\nfunction del(url){\r\n  const request = new Request(baseUrl + url, {\r\n    method: 'DELETE'\r\n  });\r\n\r\n  return fetch(request).then(onSuccess, onerror);\r\n}\r\n\r\nfunction onSuccess(response){\r\n  return response.json();\r\n}\r\n\r\nfunction onError(error){\r\n  console.log(error); // eslint-disable-line no-console\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 3\n ** module chunks = 0\n **/","export default function getBaseUrl() {\n  /* v1\n  const inDevelopment = window.location.hostname === 'localhost';\n  return inDevelopment ? 'http://localhost:3001/' : '/';\n  */\n\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n}\n\n\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g,\" \"));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}